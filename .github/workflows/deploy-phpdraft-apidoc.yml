name: Apidoc
on:
  workflow_call:
    inputs:
      amazon_region:
        required: false
        default: us-east-1
        type: string
      bucket_prefix:
        default: framna-nl
        type: string
    secrets:
      amazon_role:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy_s3:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Download API doc
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: API-documentation

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          aws-region: ${{ inputs.amazon_region }}
          role-to-assume: ${{ secrets.amazon_role }}

      - name: Generate project name
        shell: bash
        id: generate-project
        run: |
          PROJECT=$(echo '${{ github.repository	}}' | sed 's|${{ github.repository_owner }}/||')
          echo "project=${PROJECT,,}" >> "$GITHUB_OUTPUT"

      - name: Detect API docs
        id: detect
        run: |
          echo "docs=$(find . -type d -maxdepth 1 -exec basename {} \; | tr '\n' ' ')" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

      - name: Deploy Backend API doc to S3
        if: ${{ contains(steps.detect.outputs.docs, 'backend') }}
        env:
          BUCKET_PREFIX: ${{ inputs.bucket_prefix }}
          PROJECT: ${{ steps.generate-project.outputs.project }}
        run: aws s3 cp --recursive --force --acl public-read backend/ "s3://$BUCKET_PREFIX-$PROJECT-apidoc/backend"

      - name: Deploy Frontend API doc to S3
        if: ${{ contains(steps.detect.outputs.docs, 'frontend') }}
        env:
          BUCKET_PREFIX: ${{ inputs.bucket_prefix }}
          PROJECT: ${{ steps.generate-project.outputs.project }}
        run: aws s3 cp --recursive --force --acl public-read frontend/ "s3://$BUCKET_PREFIX-$PROJECT-apidoc/frontend"
