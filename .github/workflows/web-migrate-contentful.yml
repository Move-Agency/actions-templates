name: Web migrate Contentful
on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to deploy to'
        default: 'test'
        required: false
        type: string
      contentful_environment:
        description: 'The contentful environment to migrate to'
        default: ''
        required: false
        type: string
      contentful_space_id:
        description: 'The contentful space ID'
        required: true
        type: string
      migrations_dir:
        description: 'Optional path to the directory containing migrations'
        required: false
        type: string
    secrets:
      amazon_role:
        description: The AWS role to assume to store state in S3
        required: true
      npm_pat:
        description: The PAT for NPM registry access
        required: true
      contentful_management_api_token:
        description: The contentful management API token for migration access
        required: true

jobs:
  migrate_contentful:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    name: 'Contentful migration'
    env:
      ENVIRONMENT: ${{ inputs.environment }}
    strategy:
      matrix:
        node-version: ['20.x']
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Setup node
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com
          cache: yarn
      - name: Install dependencies
        run: yarn install --production=false --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_PAT}}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.amazon_role }}

      - name: Run migration step
        env:
          CONTENTFUL_ENVIRONMENT: ${{ inputs.contentful_environment != '' && inputs.contentful_environment || inputs.environment }}
          CONTENTFUL_SPACE: ${{ inputs.contentful_space_id }}
          CONTENTFUL_MANAGEMENT_API_TOKEN: ${{ secrets.contentful_management_api_token }}
          MIGRATIONS_STATE_FILE_STORAGE: s3
          MIGRATIONS_STATE_FILE_BUCKET: '${{ github.repository_owner }}-contentful-migrations'
          MIGRATIONS_STATE_FILE: migrated.json
        # Use a shell block so we only export MIGRATIONS_DIR when the caller provides one,
        # preserving existing workflows that already inject the env before this step.
        run: |
          if [ -n "${{ inputs.migrations_dir }}" ]; then
            export MIGRATIONS_DIR="${{ inputs.migrations_dir }}"
          fi

          yarn migrate
