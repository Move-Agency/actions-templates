name: Lunr.Locator recipe integrity check
on:
  workflow_call:
    inputs:
      recipe-directory:
        required: false
        type: string
        default: 'config/locator'
      stable-php-versions:
        required: false
        type: string
        default: '["8.1"]'
      experimental-php-versions:
        required: false
        type: string
        default: '["8.2", "8.3"]'
      php-extensions:
        required: false
        type: string
        default: 'autoload_psr-pprkut/autoload-psr@0.2.0'
      php-ini-settings:
        required: false
        type: string
        default: ''
    secrets:
      SLACK_WEBHOOK_URL:
        required: false
      SSH_PRIVATE_KEY_FOR_CLONING_NONPUBLIC_BACKEND_GIT_REPOSITORIES:
        required: true

jobs:
  generate-matrix:
    name: Generate matrix for tests
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix for build
        id: set-matrix
        run: |
          JSON=$(jq --null-input --arg stable "${STABLE_PHP_VERSIONS}" --arg experimental "${EXPERIMENTAL_PHP_VERSIONS}" '{"php-versions": $stable | fromjson, "experimental": [ false ], "include":[ $experimental | fromjson | .[] as $version | {"php-versions": $version, "experimental": true} ]} | tostring')
          echo "matrix=$JSON" >> "$GITHUB_OUTPUT"
        env:
          STABLE_PHP_VERSIONS: ${{ inputs.stable-php-versions }}
          EXPERIMENTAL_PHP_VERSIONS: ${{ inputs.experimental-php-versions }}

  locator-recipe-integrity-check:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    name: "PHP-${{ matrix.php-versions }}: Lunr.Locator recipe integrity check"
    needs: generate-matrix
    strategy:
      matrix: ${{ fromJson(fromJson(needs.generate-matrix.outputs.matrix)) }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: true

      - name: Cache decomposer dependencies
        id: cache-decomposer
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ${{ github.workspace }}/vendor
            ${{ github.workspace }}/decomposer.autoload.inc.php
          key: ${{ runner.os }}-${{ hashFiles('decomposer.json') }}
          restore-keys:
            ${{ runner.os }}-

      - name: Decomposer checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
            persist-credentials: false
            repository: 'move-backend/decomposer'

            # Relative path under $GITHUB_WORKSPACE to place the repository
            path: 'decomposer'

      - if: ${{ steps.cache-decomposer.outputs.cache-hit != 'true' }}
        name: Prepare decomposer target directory
        run: mkdir -p "$GITHUB_WORKSPACE/vendor"

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2.35.3
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ inputs.php-extensions }}
          ini-values: include_path='.:/usr/share/php:$GITHUB_WORKSPACE/vendor', ${{ inputs.php-ini-settings }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Configure ssh keys
        uses: webfactory/ssh-agent@a6f90b1f127823b31d4d4a8d96047790581349bd # v0.9.1
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY_FOR_CLONING_NONPUBLIC_BACKEND_GIT_REPOSITORIES }}

      - name: Install dependencies
        run: DECOMPOSER_TARGET_DIR="$GITHUB_WORKSPACE/vendor" decomposer/bin/decomposer install

      - name: Run integrity check
        run: |
            set +e
            EXIT_CODE=0
            for i in "${RECIPE_DIRECTORY}"/*; do
                RECIPE="$(basename "$i" | cut -d "." -f 2)"

                php -d disable_functions=curl_exec tests/check-locator-recipe.php "$RECIPE"

                RESULT="$?"

                if ! [ "$RESULT" = 0 ]; then
                    EXIT_CODE="$RESULT"
                fi
            done
            exit $EXIT_CODE
        env:
          RECIPE_DIRECTORY: ${{ inputs.recipe-directory }}

      - name: Post a message in a channel
        uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() && contains(fromJSON('["push", "schedule"]'), github.event_name) && env.SLACK_WEBHOOK_URL != '' }}
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*${{ github.repository }} (${{ github.ref_name }})*: PHP-${{ matrix.php-versions }}: Lunr.Locator recipe integrity check ${{ job.status }}\nURL: ${{ github.event.pull_request.html_url || format('https://github.com/{0}/commit/{1}', github.repository, github.sha) }}\nWorkflow Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*${{ github.repository }} (${{ github.ref_name }})*: PHP-${{ matrix.php-versions }}: Lunr.Locator recipe integrity check ${{ job.status }}\nURL: ${{ github.event.pull_request.html_url || format('https://github.com/{0}/commit/{1}', github.repository, github.sha) }}\nWorkflow Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
